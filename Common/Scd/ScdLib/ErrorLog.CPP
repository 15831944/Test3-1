//================== SysCAD - Copyright Kenwalt (Pty) Ltd ===================
// $Nokeywords: $
//===========================================================================

#include "stdafx.h"
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>

#define __ERRORLOG_CPP

#include "sc_defs.h"
#include "gpfuncs.h"
#include "errorlog.h"
#include <afxtempl.h> // "xafxtempl.h"
#include "scd_wm.h"


//#define"FACILITY_WINDOWS                 8
//#define FACILITY_STORAGE                 3
//#define FACILITY_RPC                     1
//#define FACILITY_WIN32                   7
//#define FACILITY_CONTROL                 10
//#define FACILITY_NULL                    0
//#define FACILITY_ITF                     4
//#define FACILITY_DISPATCH                2

struct WinErrorBlk
  {
  char * Msg;
  DWORD  Code;
  WinErrorBlk()
    {
    Msg="";
    Code=0;
    }
  WinErrorBlk(char * Msg_, DWORD Code_)
    {
    Msg=Msg_;
    Code=Code_;
    }
  };// WinErrorBlk;

#define AddWinErrCode(a) { WinErrorBlk e(#a,a); WinErrors.Add(e); }

class WinErrorList : public CArray <WinErrorBlk, WinErrorBlk&>
  {
  public:
    WinErrorList();
    ~WinErrorList();
  };
//CList <WinErrorBlk, WinErrorBlk&> WinErrors;

static WinErrorList WinErrors;

WinErrorList::WinErrorList()
  {
  AddWinErrCode(ERROR_SUCCESS);
  AddWinErrCode(ERROR_INVALID_FUNCTION);
  AddWinErrCode(ERROR_FILE_NOT_FOUND);
  AddWinErrCode(ERROR_PATH_NOT_FOUND);
  AddWinErrCode(ERROR_TOO_MANY_OPEN_FILES);
  AddWinErrCode(ERROR_ACCESS_DENIED);
  AddWinErrCode(ERROR_INVALID_HANDLE);
  AddWinErrCode(ERROR_ARENA_TRASHED);
  AddWinErrCode(ERROR_NOT_ENOUGH_MEMORY);
  AddWinErrCode(ERROR_INVALID_BLOCK);
  AddWinErrCode(ERROR_BAD_ENVIRONMENT);
  AddWinErrCode(ERROR_BAD_FORMAT);
  AddWinErrCode(ERROR_INVALID_ACCESS);
  AddWinErrCode(ERROR_INVALID_DATA);
  AddWinErrCode(ERROR_OUTOFMEMORY);
  AddWinErrCode(ERROR_INVALID_DRIVE);
  AddWinErrCode(ERROR_CURRENT_DIRECTORY);
  AddWinErrCode(ERROR_NOT_SAME_DEVICE);
  AddWinErrCode(ERROR_NO_MORE_FILES);
  AddWinErrCode(ERROR_WRITE_PROTECT);
  AddWinErrCode(ERROR_BAD_UNIT);
  AddWinErrCode(ERROR_NOT_READY);
  AddWinErrCode(ERROR_BAD_COMMAND);
  AddWinErrCode(ERROR_CRC);
  AddWinErrCode(ERROR_BAD_LENGTH);
  AddWinErrCode(ERROR_SEEK);
  AddWinErrCode(ERROR_NOT_DOS_DISK);
  AddWinErrCode(ERROR_SECTOR_NOT_FOUND);
  AddWinErrCode(ERROR_OUT_OF_PAPER);
  AddWinErrCode(ERROR_WRITE_FAULT);
  AddWinErrCode(ERROR_READ_FAULT);
  AddWinErrCode(ERROR_GEN_FAILURE);
  AddWinErrCode(ERROR_SHARING_VIOLATION);
  AddWinErrCode(ERROR_LOCK_VIOLATION);
  AddWinErrCode(ERROR_WRONG_DISK);
  AddWinErrCode(ERROR_SHARING_BUFFER_EXCEEDED);
  AddWinErrCode(ERROR_HANDLE_EOF);
  AddWinErrCode(ERROR_HANDLE_DISK_FULL);
  AddWinErrCode(ERROR_NOT_SUPPORTED);
  AddWinErrCode(ERROR_REM_NOT_LIST);
  AddWinErrCode(ERROR_DUP_NAME);
  AddWinErrCode(ERROR_BAD_NETPATH);
  AddWinErrCode(ERROR_NETWORK_BUSY);
  AddWinErrCode(ERROR_DEV_NOT_EXIST);
  AddWinErrCode(ERROR_TOO_MANY_CMDS);
  AddWinErrCode(ERROR_ADAP_HDW_ERR);
  AddWinErrCode(ERROR_BAD_NET_RESP);
  AddWinErrCode(ERROR_UNEXP_NET_ERR);
  AddWinErrCode(ERROR_BAD_REM_ADAP);
  AddWinErrCode(ERROR_PRINTQ_FULL);
  AddWinErrCode(ERROR_NO_SPOOL_SPACE);
  AddWinErrCode(ERROR_PRINT_CANCELLED);
  AddWinErrCode(ERROR_NETNAME_DELETED);
  AddWinErrCode(ERROR_NETWORK_ACCESS_DENIED);
  AddWinErrCode(ERROR_BAD_DEV_TYPE);
  AddWinErrCode(ERROR_BAD_NET_NAME);
  AddWinErrCode(ERROR_TOO_MANY_NAMES);
  AddWinErrCode(ERROR_TOO_MANY_SESS);
  AddWinErrCode(ERROR_SHARING_PAUSED);
  AddWinErrCode(ERROR_REQ_NOT_ACCEP);
  AddWinErrCode(ERROR_REDIR_PAUSED);
  AddWinErrCode(ERROR_FILE_EXISTS);
  AddWinErrCode(ERROR_CANNOT_MAKE);
  AddWinErrCode(ERROR_FAIL_I24);
  AddWinErrCode(ERROR_OUT_OF_STRUCTURES);
  AddWinErrCode(ERROR_ALREADY_ASSIGNED);
  AddWinErrCode(ERROR_INVALID_PASSWORD);
  AddWinErrCode(ERROR_INVALID_PARAMETER);
  AddWinErrCode(ERROR_NET_WRITE_FAULT);
  AddWinErrCode(ERROR_NO_PROC_SLOTS);
  AddWinErrCode(ERROR_TOO_MANY_SEMAPHORES);
  AddWinErrCode(ERROR_EXCL_SEM_ALREADY_OWNED);
  AddWinErrCode(ERROR_SEM_IS_SET);
  AddWinErrCode(ERROR_TOO_MANY_SEM_REQUESTS);
  AddWinErrCode(ERROR_INVALID_AT_INTERRUPT_TIME);
  AddWinErrCode(ERROR_SEM_OWNER_DIED);
  AddWinErrCode(ERROR_SEM_USER_LIMIT);
  AddWinErrCode(ERROR_DISK_CHANGE);
  AddWinErrCode(ERROR_DRIVE_LOCKED);
  AddWinErrCode(ERROR_BROKEN_PIPE);
  AddWinErrCode(ERROR_OPEN_FAILED);
  AddWinErrCode(ERROR_BUFFER_OVERFLOW);
  AddWinErrCode(ERROR_DISK_FULL);
  AddWinErrCode(ERROR_NO_MORE_SEARCH_HANDLES);
  AddWinErrCode(ERROR_INVALID_TARGET_HANDLE);
  AddWinErrCode(ERROR_INVALID_CATEGORY);
  AddWinErrCode(ERROR_INVALID_VERIFY_SWITCH);
  AddWinErrCode(ERROR_BAD_DRIVER_LEVEL);
  AddWinErrCode(ERROR_CALL_NOT_IMPLEMENTED);
  AddWinErrCode(ERROR_SEM_TIMEOUT);
  AddWinErrCode(ERROR_INSUFFICIENT_BUFFER);
  AddWinErrCode(ERROR_INVALID_NAME);
  AddWinErrCode(ERROR_INVALID_LEVEL);
  AddWinErrCode(ERROR_NO_VOLUME_LABEL);
  AddWinErrCode(ERROR_MOD_NOT_FOUND);
  AddWinErrCode(ERROR_PROC_NOT_FOUND);
  AddWinErrCode(ERROR_WAIT_NO_CHILDREN);
  AddWinErrCode(ERROR_CHILD_NOT_COMPLETE);
  AddWinErrCode(ERROR_DIRECT_ACCESS_HANDLE);
  AddWinErrCode(ERROR_NEGATIVE_SEEK);
  AddWinErrCode(ERROR_SEEK_ON_DEVICE);
  AddWinErrCode(ERROR_IS_JOIN_TARGET);
  AddWinErrCode(ERROR_IS_JOINED);
  AddWinErrCode(ERROR_IS_SUBSTED);
  AddWinErrCode(ERROR_NOT_JOINED);
  AddWinErrCode(ERROR_NOT_SUBSTED);
  AddWinErrCode(ERROR_JOIN_TO_JOIN);
  AddWinErrCode(ERROR_SUBST_TO_SUBST);
  AddWinErrCode(ERROR_JOIN_TO_SUBST);
  AddWinErrCode(ERROR_SUBST_TO_JOIN);
  AddWinErrCode(ERROR_BUSY_DRIVE);
  AddWinErrCode(ERROR_SAME_DRIVE);
  AddWinErrCode(ERROR_DIR_NOT_ROOT);
  AddWinErrCode(ERROR_DIR_NOT_EMPTY);
  AddWinErrCode(ERROR_IS_SUBST_PATH);
  AddWinErrCode(ERROR_IS_JOIN_PATH);
  AddWinErrCode(ERROR_PATH_BUSY);
  AddWinErrCode(ERROR_IS_SUBST_TARGET);
  AddWinErrCode(ERROR_SYSTEM_TRACE);
  AddWinErrCode(ERROR_INVALID_EVENT_COUNT);
  AddWinErrCode(ERROR_TOO_MANY_MUXWAITERS);
  AddWinErrCode(ERROR_INVALID_LIST_FORMAT);
  AddWinErrCode(ERROR_LABEL_TOO_LONG);
  AddWinErrCode(ERROR_TOO_MANY_TCBS);
  AddWinErrCode(ERROR_SIGNAL_REFUSED);
  AddWinErrCode(ERROR_DISCARDED);
  AddWinErrCode(ERROR_NOT_LOCKED);
  AddWinErrCode(ERROR_BAD_THREADID_ADDR);
  AddWinErrCode(ERROR_BAD_ARGUMENTS);
  AddWinErrCode(ERROR_BAD_PATHNAME);
  AddWinErrCode(ERROR_SIGNAL_PENDING);
  AddWinErrCode(ERROR_MAX_THRDS_REACHED);
  AddWinErrCode(ERROR_LOCK_FAILED);
  AddWinErrCode(ERROR_BUSY);
  AddWinErrCode(ERROR_CANCEL_VIOLATION);
  AddWinErrCode(ERROR_ATOMIC_LOCKS_NOT_SUPPORTED);
  AddWinErrCode(ERROR_INVALID_SEGMENT_NUMBER);
  AddWinErrCode(ERROR_INVALID_ORDINAL);
  AddWinErrCode(ERROR_ALREADY_EXISTS);
  AddWinErrCode(ERROR_INVALID_FLAG_NUMBER);
  AddWinErrCode(ERROR_SEM_NOT_FOUND);
  AddWinErrCode(ERROR_INVALID_STARTING_CODESEG);
  AddWinErrCode(ERROR_INVALID_STACKSEG);
  AddWinErrCode(ERROR_INVALID_MODULETYPE);
  AddWinErrCode(ERROR_INVALID_EXE_SIGNATURE);
  AddWinErrCode(ERROR_EXE_MARKED_INVALID);
  AddWinErrCode(ERROR_BAD_EXE_FORMAT);
  AddWinErrCode(ERROR_ITERATED_DATA_EXCEEDS_64k);
  AddWinErrCode(ERROR_INVALID_MINALLOCSIZE);
  AddWinErrCode(ERROR_DYNLINK_FROM_INVALID_RING);
  AddWinErrCode(ERROR_IOPL_NOT_ENABLED);
  AddWinErrCode(ERROR_INVALID_SEGDPL);
  AddWinErrCode(ERROR_AUTODATASEG_EXCEEDS_64k);
  AddWinErrCode(ERROR_RING2SEG_MUST_BE_MOVABLE);
  AddWinErrCode(ERROR_RELOC_CHAIN_XEEDS_SEGLIM);
  AddWinErrCode(ERROR_INFLOOP_IN_RELOC_CHAIN);
  AddWinErrCode(ERROR_ENVVAR_NOT_FOUND);
  AddWinErrCode(ERROR_NO_SIGNAL_SENT);
  AddWinErrCode(ERROR_FILENAME_EXCED_RANGE);
  AddWinErrCode(ERROR_RING2_STACK_IN_USE);
  AddWinErrCode(ERROR_META_EXPANSION_TOO_LONG);
  AddWinErrCode(ERROR_INVALID_SIGNAL_NUMBER);
  AddWinErrCode(ERROR_THREAD_1_INACTIVE);
  AddWinErrCode(ERROR_LOCKED);
  AddWinErrCode(ERROR_TOO_MANY_MODULES);
  AddWinErrCode(ERROR_NESTING_NOT_ALLOWED);
  AddWinErrCode(ERROR_BAD_PIPE);
  AddWinErrCode(ERROR_PIPE_BUSY);
  AddWinErrCode(ERROR_NO_DATA);
  AddWinErrCode(ERROR_PIPE_NOT_CONNECTED);
  AddWinErrCode(ERROR_MORE_DATA);
  AddWinErrCode(ERROR_VC_DISCONNECTED);
  AddWinErrCode(ERROR_INVALID_EA_NAME);
  AddWinErrCode(ERROR_EA_LIST_INCONSISTENT);
  AddWinErrCode(ERROR_NO_MORE_ITEMS);
  AddWinErrCode(ERROR_CANNOT_COPY);
  AddWinErrCode(ERROR_DIRECTORY);
  AddWinErrCode(ERROR_EAS_DIDNT_FIT);
  AddWinErrCode(ERROR_EA_FILE_CORRUPT);
  AddWinErrCode(ERROR_EA_TABLE_FULL);
  AddWinErrCode(ERROR_INVALID_EA_HANDLE);
  AddWinErrCode(ERROR_EAS_NOT_SUPPORTED);
  AddWinErrCode(ERROR_NOT_OWNER);
  AddWinErrCode(ERROR_TOO_MANY_POSTS);
  AddWinErrCode(ERROR_PARTIAL_COPY);
  AddWinErrCode(ERROR_MR_MID_NOT_FOUND);
  AddWinErrCode(ERROR_INVALID_ADDRESS);
  AddWinErrCode(ERROR_ARITHMETIC_OVERFLOW);
  AddWinErrCode(ERROR_PIPE_CONNECTED);
  AddWinErrCode(ERROR_PIPE_LISTENING);
  AddWinErrCode(ERROR_EA_ACCESS_DENIED);
  AddWinErrCode(ERROR_OPERATION_ABORTED);
  AddWinErrCode(ERROR_IO_INCOMPLETE);
  AddWinErrCode(ERROR_IO_PENDING);
  AddWinErrCode(ERROR_NOACCESS);
  AddWinErrCode(ERROR_SWAPERROR);
  AddWinErrCode(ERROR_STACK_OVERFLOW);
  AddWinErrCode(ERROR_INVALID_MESSAGE);
  AddWinErrCode(ERROR_CAN_NOT_COMPLETE);
  AddWinErrCode(ERROR_INVALID_FLAGS);
  AddWinErrCode(ERROR_UNRECOGNIZED_VOLUME);
  AddWinErrCode(ERROR_FILE_INVALID);
  AddWinErrCode(ERROR_FULLSCREEN_MODE);
  AddWinErrCode(ERROR_NO_TOKEN);
  AddWinErrCode(ERROR_BADDB);
  AddWinErrCode(ERROR_BADKEY);
  AddWinErrCode(ERROR_CANTOPEN);
  AddWinErrCode(ERROR_CANTREAD);
  AddWinErrCode(ERROR_CANTWRITE);
  AddWinErrCode(ERROR_REGISTRY_RECOVERED);
  AddWinErrCode(ERROR_REGISTRY_CORRUPT);
  AddWinErrCode(ERROR_REGISTRY_IO_FAILED);
  AddWinErrCode(ERROR_NOT_REGISTRY_FILE);
  AddWinErrCode(ERROR_KEY_DELETED);
  AddWinErrCode(ERROR_NO_LOG_SPACE);
  AddWinErrCode(ERROR_KEY_HAS_CHILDREN);
  AddWinErrCode(ERROR_CHILD_MUST_BE_VOLATILE);
  AddWinErrCode(ERROR_NOTIFY_ENUM_DIR);
  AddWinErrCode(ERROR_DEPENDENT_SERVICES_RUNNING);
  AddWinErrCode(ERROR_INVALID_SERVICE_CONTROL);
  AddWinErrCode(ERROR_SERVICE_REQUEST_TIMEOUT);
  AddWinErrCode(ERROR_SERVICE_NO_THREAD);
  AddWinErrCode(ERROR_SERVICE_DATABASE_LOCKED);
  AddWinErrCode(ERROR_SERVICE_ALREADY_RUNNING);
  AddWinErrCode(ERROR_INVALID_SERVICE_ACCOUNT);
  AddWinErrCode(ERROR_SERVICE_DISABLED);
  AddWinErrCode(ERROR_CIRCULAR_DEPENDENCY);
  AddWinErrCode(ERROR_SERVICE_DOES_NOT_EXIST);
  AddWinErrCode(ERROR_SERVICE_CANNOT_ACCEPT_CTRL);
  AddWinErrCode(ERROR_SERVICE_NOT_ACTIVE);
  AddWinErrCode(ERROR_FAILED_SERVICE_CONTROLLER_CONNECT);
  AddWinErrCode(ERROR_EXCEPTION_IN_SERVICE);
  AddWinErrCode(ERROR_DATABASE_DOES_NOT_EXIST);
  AddWinErrCode(ERROR_SERVICE_SPECIFIC_ERROR);
  AddWinErrCode(ERROR_PROCESS_ABORTED);
  AddWinErrCode(ERROR_SERVICE_DEPENDENCY_FAIL);
  AddWinErrCode(ERROR_SERVICE_LOGON_FAILED);
  AddWinErrCode(ERROR_SERVICE_START_HANG);
  AddWinErrCode(ERROR_INVALID_SERVICE_LOCK);
  AddWinErrCode(ERROR_SERVICE_MARKED_FOR_DELETE);
  AddWinErrCode(ERROR_SERVICE_EXISTS);
  AddWinErrCode(ERROR_ALREADY_RUNNING_LKG);
  AddWinErrCode(ERROR_SERVICE_DEPENDENCY_DELETED);
  AddWinErrCode(ERROR_BOOT_ALREADY_ACCEPTED);
  AddWinErrCode(ERROR_SERVICE_NEVER_STARTED);
  AddWinErrCode(ERROR_DUPLICATE_SERVICE_NAME);
  AddWinErrCode(ERROR_END_OF_MEDIA);
  AddWinErrCode(ERROR_FILEMARK_DETECTED);
  AddWinErrCode(ERROR_BEGINNING_OF_MEDIA);
  AddWinErrCode(ERROR_SETMARK_DETECTED);
  AddWinErrCode(ERROR_NO_DATA_DETECTED);
  AddWinErrCode(ERROR_PARTITION_FAILURE);
  AddWinErrCode(ERROR_INVALID_BLOCK_LENGTH);
  AddWinErrCode(ERROR_DEVICE_NOT_PARTITIONED);
  AddWinErrCode(ERROR_UNABLE_TO_LOCK_MEDIA);
  AddWinErrCode(ERROR_UNABLE_TO_UNLOAD_MEDIA);
  AddWinErrCode(ERROR_MEDIA_CHANGED);
  AddWinErrCode(ERROR_BUS_RESET);
  AddWinErrCode(ERROR_NO_MEDIA_IN_DRIVE);
  AddWinErrCode(ERROR_NO_UNICODE_TRANSLATION);
  AddWinErrCode(ERROR_DLL_INIT_FAILED);
  AddWinErrCode(ERROR_SHUTDOWN_IN_PROGRESS);
  AddWinErrCode(ERROR_NO_SHUTDOWN_IN_PROGRESS);
  AddWinErrCode(ERROR_IO_DEVICE);
  AddWinErrCode(ERROR_SERIAL_NO_DEVICE);
  AddWinErrCode(ERROR_IRQ_BUSY);
  AddWinErrCode(ERROR_MORE_WRITES);
  AddWinErrCode(ERROR_COUNTER_TIMEOUT);
  AddWinErrCode(ERROR_FLOPPY_ID_MARK_NOT_FOUND);
  AddWinErrCode(ERROR_FLOPPY_WRONG_CYLINDER);
  AddWinErrCode(ERROR_FLOPPY_UNKNOWN_ERROR);
  AddWinErrCode(ERROR_FLOPPY_BAD_REGISTERS);
  AddWinErrCode(ERROR_DISK_RECALIBRATE_FAILED);
  AddWinErrCode(ERROR_DISK_OPERATION_FAILED);
  AddWinErrCode(ERROR_DISK_RESET_FAILED);
  AddWinErrCode(ERROR_EOM_OVERFLOW);
  AddWinErrCode(ERROR_NOT_ENOUGH_SERVER_MEMORY);
  AddWinErrCode(ERROR_POSSIBLE_DEADLOCK);
  AddWinErrCode(ERROR_MAPPED_ALIGNMENT);
  AddWinErrCode(ERROR_BAD_USERNAME);
  AddWinErrCode(ERROR_NOT_CONNECTED);
  AddWinErrCode(ERROR_OPEN_FILES);
  AddWinErrCode(ERROR_ACTIVE_CONNECTIONS);
  AddWinErrCode(ERROR_DEVICE_IN_USE);
  AddWinErrCode(ERROR_BAD_DEVICE);
  AddWinErrCode(ERROR_CONNECTION_UNAVAIL);
  AddWinErrCode(ERROR_DEVICE_ALREADY_REMEMBERED);
  AddWinErrCode(ERROR_NO_NET_OR_BAD_PATH);
  AddWinErrCode(ERROR_BAD_PROVIDER);
  AddWinErrCode(ERROR_CANNOT_OPEN_PROFILE);
  AddWinErrCode(ERROR_BAD_PROFILE);
  AddWinErrCode(ERROR_NOT_CONTAINER);
  AddWinErrCode(ERROR_EXTENDED_ERROR);
  AddWinErrCode(ERROR_INVALID_GROUPNAME);
  AddWinErrCode(ERROR_INVALID_COMPUTERNAME);
  AddWinErrCode(ERROR_INVALID_EVENTNAME);
  AddWinErrCode(ERROR_INVALID_DOMAINNAME);
  AddWinErrCode(ERROR_INVALID_SERVICENAME);
  AddWinErrCode(ERROR_INVALID_NETNAME);
  AddWinErrCode(ERROR_INVALID_SHARENAME);
  AddWinErrCode(ERROR_INVALID_PASSWORDNAME);
  AddWinErrCode(ERROR_INVALID_MESSAGENAME);
  AddWinErrCode(ERROR_INVALID_MESSAGEDEST);
  AddWinErrCode(ERROR_SESSION_CREDENTIAL_CONFLICT);
  AddWinErrCode(ERROR_REMOTE_SESSION_LIMIT_EXCEEDED);
  AddWinErrCode(ERROR_DUP_DOMAINNAME);
  AddWinErrCode(ERROR_NO_NETWORK);
  AddWinErrCode(ERROR_CANCELLED);
  AddWinErrCode(ERROR_USER_MAPPED_FILE);
  AddWinErrCode(ERROR_CONNECTION_REFUSED);
  AddWinErrCode(ERROR_GRACEFUL_DISCONNECT);
  AddWinErrCode(ERROR_ADDRESS_ALREADY_ASSOCIATED);
  AddWinErrCode(ERROR_ADDRESS_NOT_ASSOCIATED);
  AddWinErrCode(ERROR_CONNECTION_INVALID);
  AddWinErrCode(ERROR_CONNECTION_ACTIVE);
  AddWinErrCode(ERROR_NETWORK_UNREACHABLE);
  AddWinErrCode(ERROR_HOST_UNREACHABLE);
  AddWinErrCode(ERROR_PROTOCOL_UNREACHABLE);
  AddWinErrCode(ERROR_PORT_UNREACHABLE);
  AddWinErrCode(ERROR_REQUEST_ABORTED);
  AddWinErrCode(ERROR_CONNECTION_ABORTED);
  AddWinErrCode(ERROR_RETRY);
  AddWinErrCode(ERROR_CONNECTION_COUNT_LIMIT);
  AddWinErrCode(ERROR_LOGIN_TIME_RESTRICTION);
  AddWinErrCode(ERROR_LOGIN_WKSTA_RESTRICTION);
  AddWinErrCode(ERROR_INCORRECT_ADDRESS);
  AddWinErrCode(ERROR_ALREADY_REGISTERED);
  AddWinErrCode(ERROR_SERVICE_NOT_FOUND);
  AddWinErrCode(ERROR_NOT_ALL_ASSIGNED);
  AddWinErrCode(ERROR_SOME_NOT_MAPPED);
  AddWinErrCode(ERROR_NO_QUOTAS_FOR_ACCOUNT);
  AddWinErrCode(ERROR_LOCAL_USER_SESSION_KEY);
  AddWinErrCode(ERROR_NULL_LM_PASSWORD);
  AddWinErrCode(ERROR_UNKNOWN_REVISION);
  AddWinErrCode(ERROR_REVISION_MISMATCH);
  AddWinErrCode(ERROR_INVALID_OWNER);
  AddWinErrCode(ERROR_INVALID_PRIMARY_GROUP);
  AddWinErrCode(ERROR_NO_IMPERSONATION_TOKEN);
  AddWinErrCode(ERROR_CANT_DISABLE_MANDATORY);
  AddWinErrCode(ERROR_NO_LOGON_SERVERS);
  AddWinErrCode(ERROR_NO_SUCH_LOGON_SESSION);
  AddWinErrCode(ERROR_NO_SUCH_PRIVILEGE);
  AddWinErrCode(ERROR_PRIVILEGE_NOT_HELD);
  AddWinErrCode(ERROR_INVALID_ACCOUNT_NAME);
  AddWinErrCode(ERROR_USER_EXISTS);
  AddWinErrCode(ERROR_NO_SUCH_USER);
  AddWinErrCode(ERROR_GROUP_EXISTS);
  AddWinErrCode(ERROR_NO_SUCH_GROUP);
  AddWinErrCode(ERROR_MEMBER_IN_GROUP);
  AddWinErrCode(ERROR_MEMBER_NOT_IN_GROUP);
  AddWinErrCode(ERROR_LAST_ADMIN);
  AddWinErrCode(ERROR_WRONG_PASSWORD);
  AddWinErrCode(ERROR_ILL_FORMED_PASSWORD);
  AddWinErrCode(ERROR_PASSWORD_RESTRICTION);
  AddWinErrCode(ERROR_LOGON_FAILURE);
  AddWinErrCode(ERROR_ACCOUNT_RESTRICTION);
  AddWinErrCode(ERROR_INVALID_LOGON_HOURS);
  AddWinErrCode(ERROR_INVALID_WORKSTATION);
  AddWinErrCode(ERROR_PASSWORD_EXPIRED);
  AddWinErrCode(ERROR_ACCOUNT_DISABLED);
  AddWinErrCode(ERROR_NONE_MAPPED);
  AddWinErrCode(ERROR_TOO_MANY_LUIDS_REQUESTED);
  AddWinErrCode(ERROR_LUIDS_EXHAUSTED);
  AddWinErrCode(ERROR_INVALID_SUB_AUTHORITY);
  AddWinErrCode(ERROR_INVALID_ACL);
  AddWinErrCode(ERROR_INVALID_SID);
  AddWinErrCode(ERROR_INVALID_SECURITY_DESCR);
  AddWinErrCode(ERROR_BAD_INHERITANCE_ACL);
  AddWinErrCode(ERROR_SERVER_DISABLED);
  AddWinErrCode(ERROR_SERVER_NOT_DISABLED);
  AddWinErrCode(ERROR_INVALID_ID_AUTHORITY);
  AddWinErrCode(ERROR_ALLOTTED_SPACE_EXCEEDED);
  AddWinErrCode(ERROR_INVALID_GROUP_ATTRIBUTES);
  AddWinErrCode(ERROR_BAD_IMPERSONATION_LEVEL);
  AddWinErrCode(ERROR_CANT_OPEN_ANONYMOUS);
  AddWinErrCode(ERROR_BAD_VALIDATION_CLASS);
  AddWinErrCode(ERROR_BAD_TOKEN_TYPE);
  AddWinErrCode(ERROR_NO_SECURITY_ON_OBJECT);
  AddWinErrCode(ERROR_CANT_ACCESS_DOMAIN_INFO);
  AddWinErrCode(ERROR_INVALID_SERVER_STATE);
  AddWinErrCode(ERROR_INVALID_DOMAIN_STATE);
  AddWinErrCode(ERROR_INVALID_DOMAIN_ROLE);
  AddWinErrCode(ERROR_NO_SUCH_DOMAIN);
  AddWinErrCode(ERROR_DOMAIN_EXISTS);
  AddWinErrCode(ERROR_DOMAIN_LIMIT_EXCEEDED);
  AddWinErrCode(ERROR_INTERNAL_DB_CORRUPTION);
  AddWinErrCode(ERROR_INTERNAL_ERROR);
  AddWinErrCode(ERROR_GENERIC_NOT_MAPPED);
  AddWinErrCode(ERROR_BAD_DESCRIPTOR_FORMAT);
  AddWinErrCode(ERROR_NOT_LOGON_PROCESS);
  AddWinErrCode(ERROR_LOGON_SESSION_EXISTS);
  AddWinErrCode(ERROR_NO_SUCH_PACKAGE);
  AddWinErrCode(ERROR_BAD_LOGON_SESSION_STATE);
  AddWinErrCode(ERROR_LOGON_SESSION_COLLISION);
  AddWinErrCode(ERROR_INVALID_LOGON_TYPE);
  AddWinErrCode(ERROR_CANNOT_IMPERSONATE);
  AddWinErrCode(ERROR_RXACT_INVALID_STATE);
  AddWinErrCode(ERROR_RXACT_COMMIT_FAILURE);
  AddWinErrCode(ERROR_SPECIAL_ACCOUNT);
  AddWinErrCode(ERROR_SPECIAL_GROUP);
  AddWinErrCode(ERROR_SPECIAL_USER);
  AddWinErrCode(ERROR_MEMBERS_PRIMARY_GROUP);
  AddWinErrCode(ERROR_TOKEN_ALREADY_IN_USE);
  AddWinErrCode(ERROR_NO_SUCH_ALIAS);
  AddWinErrCode(ERROR_MEMBER_NOT_IN_ALIAS);
  AddWinErrCode(ERROR_MEMBER_IN_ALIAS);
  AddWinErrCode(ERROR_ALIAS_EXISTS);
  AddWinErrCode(ERROR_LOGON_NOT_GRANTED);
  AddWinErrCode(ERROR_TOO_MANY_SECRETS);
  AddWinErrCode(ERROR_SECRET_TOO_LONG);
  AddWinErrCode(ERROR_INTERNAL_DB_ERROR);
  AddWinErrCode(ERROR_TOO_MANY_CONTEXT_IDS);
  AddWinErrCode(ERROR_LOGON_TYPE_NOT_GRANTED);
  AddWinErrCode(ERROR_NT_CROSS_ENCRYPTION_REQUIRED);
  AddWinErrCode(ERROR_NO_SUCH_MEMBER);
  AddWinErrCode(ERROR_INVALID_MEMBER);
  AddWinErrCode(ERROR_TOO_MANY_SIDS);
  AddWinErrCode(ERROR_LM_CROSS_ENCRYPTION_REQUIRED);
  AddWinErrCode(ERROR_NO_INHERITANCE);
  AddWinErrCode(ERROR_FILE_CORRUPT);
  AddWinErrCode(ERROR_DISK_CORRUPT);
  AddWinErrCode(ERROR_NO_USER_SESSION_KEY);
  AddWinErrCode(ERROR_INVALID_WINDOW_HANDLE);
  AddWinErrCode(ERROR_INVALID_MENU_HANDLE);
  AddWinErrCode(ERROR_INVALID_CURSOR_HANDLE);
  AddWinErrCode(ERROR_INVALID_ACCEL_HANDLE);
  AddWinErrCode(ERROR_INVALID_HOOK_HANDLE);
  AddWinErrCode(ERROR_INVALID_DWP_HANDLE);
  AddWinErrCode(ERROR_TLW_WITH_WSCHILD);
  AddWinErrCode(ERROR_CANNOT_FIND_WND_CLASS);
  AddWinErrCode(ERROR_WINDOW_OF_OTHER_THREAD);
  AddWinErrCode(ERROR_HOTKEY_ALREADY_REGISTERED);
  AddWinErrCode(ERROR_CLASS_ALREADY_EXISTS);
  AddWinErrCode(ERROR_CLASS_DOES_NOT_EXIST);
  AddWinErrCode(ERROR_CLASS_HAS_WINDOWS);
  AddWinErrCode(ERROR_INVALID_INDEX);
  AddWinErrCode(ERROR_INVALID_ICON_HANDLE);
  AddWinErrCode(ERROR_PRIVATE_DIALOG_INDEX);
  AddWinErrCode(ERROR_LISTBOX_ID_NOT_FOUND);
  AddWinErrCode(ERROR_NO_WILDCARD_CHARACTERS);
  AddWinErrCode(ERROR_CLIPBOARD_NOT_OPEN);
  AddWinErrCode(ERROR_HOTKEY_NOT_REGISTERED);
  AddWinErrCode(ERROR_WINDOW_NOT_DIALOG);
  AddWinErrCode(ERROR_CONTROL_ID_NOT_FOUND);
  AddWinErrCode(ERROR_INVALID_COMBOBOX_MESSAGE);
  AddWinErrCode(ERROR_WINDOW_NOT_COMBOBOX);
  AddWinErrCode(ERROR_INVALID_EDIT_HEIGHT);
  AddWinErrCode(ERROR_DC_NOT_FOUND);
  AddWinErrCode(ERROR_INVALID_HOOK_FILTER);
  AddWinErrCode(ERROR_INVALID_FILTER_PROC);
  AddWinErrCode(ERROR_HOOK_NEEDS_HMOD);
  AddWinErrCode(ERROR_GLOBAL_ONLY_HOOK);
  AddWinErrCode(ERROR_JOURNAL_HOOK_SET);
  AddWinErrCode(ERROR_HOOK_NOT_INSTALLED);
  AddWinErrCode(ERROR_INVALID_LB_MESSAGE);
  AddWinErrCode(ERROR_SETCOUNT_ON_BAD_LB);
  AddWinErrCode(ERROR_LB_WITHOUT_TABSTOPS);
  AddWinErrCode(ERROR_DESTROY_OBJECT_OF_OTHER_THREAD);
  AddWinErrCode(ERROR_CHILD_WINDOW_MENU);
  AddWinErrCode(ERROR_NO_SYSTEM_MENU);
  AddWinErrCode(ERROR_INVALID_MSGBOX_STYLE);
  AddWinErrCode(ERROR_INVALID_SPI_VALUE);
  AddWinErrCode(ERROR_SCREEN_ALREADY_LOCKED);
  AddWinErrCode(ERROR_HWNDS_HAVE_DIFF_PARENT);
  AddWinErrCode(ERROR_NOT_CHILD_WINDOW);
  AddWinErrCode(ERROR_INVALID_GW_COMMAND);
  AddWinErrCode(ERROR_INVALID_THREAD_ID);
  AddWinErrCode(ERROR_NON_MDICHILD_WINDOW);
  AddWinErrCode(ERROR_POPUP_ALREADY_ACTIVE);
  AddWinErrCode(ERROR_NO_SCROLLBARS);
  AddWinErrCode(ERROR_INVALID_SCROLLBAR_RANGE);
  AddWinErrCode(ERROR_INVALID_SHOWWIN_COMMAND);
  AddWinErrCode(ERROR_EVENTLOG_FILE_CORRUPT);
  AddWinErrCode(ERROR_EVENTLOG_CANT_START);
  AddWinErrCode(ERROR_LOG_FILE_FULL);
  AddWinErrCode(ERROR_EVENTLOG_FILE_CHANGED);
  AddWinErrCode(RPC_S_INVALID_STRING_BINDING);
  AddWinErrCode(RPC_S_WRONG_KIND_OF_BINDING);
  AddWinErrCode(RPC_S_INVALID_BINDING);
  AddWinErrCode(RPC_S_PROTSEQ_NOT_SUPPORTED);
  AddWinErrCode(RPC_S_INVALID_RPC_PROTSEQ);
  AddWinErrCode(RPC_S_INVALID_STRING_UUID);
  AddWinErrCode(RPC_S_INVALID_ENDPOINT_FORMAT);
  AddWinErrCode(RPC_S_INVALID_NET_ADDR);
  AddWinErrCode(RPC_S_NO_ENDPOINT_FOUND);
  AddWinErrCode(RPC_S_INVALID_TIMEOUT);
  AddWinErrCode(RPC_S_OBJECT_NOT_FOUND);
  AddWinErrCode(RPC_S_ALREADY_REGISTERED);
  AddWinErrCode(RPC_S_TYPE_ALREADY_REGISTERED);
  AddWinErrCode(RPC_S_ALREADY_LISTENING);
  AddWinErrCode(RPC_S_NO_PROTSEQS_REGISTERED);
  AddWinErrCode(RPC_S_NOT_LISTENING);
  AddWinErrCode(RPC_S_UNKNOWN_MGR_TYPE);
  AddWinErrCode(RPC_S_UNKNOWN_IF);
  AddWinErrCode(RPC_S_NO_BINDINGS);
  AddWinErrCode(RPC_S_NO_PROTSEQS);
  AddWinErrCode(RPC_S_CANT_CREATE_ENDPOINT);
  AddWinErrCode(RPC_S_OUT_OF_RESOURCES);
  AddWinErrCode(RPC_S_SERVER_UNAVAILABLE);
  AddWinErrCode(RPC_S_SERVER_TOO_BUSY);
  AddWinErrCode(RPC_S_INVALID_NETWORK_OPTIONS);
  AddWinErrCode(RPC_S_NO_CALL_ACTIVE);
  AddWinErrCode(RPC_S_CALL_FAILED);
  AddWinErrCode(RPC_S_CALL_FAILED_DNE);

  AddWinErrCode(RPC_S_PROTOCOL_ERROR);
  AddWinErrCode(RPC_S_UNSUPPORTED_TRANS_SYN);
  AddWinErrCode(RPC_S_UNSUPPORTED_TYPE);
  AddWinErrCode(RPC_S_INVALID_TAG);
  AddWinErrCode(RPC_S_INVALID_BOUND);
  AddWinErrCode(RPC_S_NO_ENTRY_NAME);
  AddWinErrCode(RPC_S_INVALID_NAME_SYNTAX);
  AddWinErrCode(RPC_S_UNSUPPORTED_NAME_SYNTAX);
  AddWinErrCode(RPC_S_UUID_NO_ADDRESS);
  AddWinErrCode(RPC_S_DUPLICATE_ENDPOINT);
  AddWinErrCode(RPC_S_UNKNOWN_AUTHN_TYPE);
  AddWinErrCode(RPC_S_MAX_CALLS_TOO_SMALL);
  AddWinErrCode(RPC_S_STRING_TOO_LONG);
  AddWinErrCode(RPC_S_PROTSEQ_NOT_FOUND);
  AddWinErrCode(RPC_S_PROCNUM_OUT_OF_RANGE);
  AddWinErrCode(RPC_S_BINDING_HAS_NO_AUTH);
  AddWinErrCode(RPC_S_UNKNOWN_AUTHN_SERVICE);
  AddWinErrCode(RPC_S_UNKNOWN_AUTHN_LEVEL);
  AddWinErrCode(RPC_S_INVALID_AUTH_IDENTITY);
  AddWinErrCode(RPC_S_UNKNOWN_AUTHZ_SERVICE);
  AddWinErrCode(EPT_S_INVALID_ENTRY);
  AddWinErrCode(EPT_S_CANT_PERFORM_OP);
  AddWinErrCode(EPT_S_NOT_REGISTERED);
  AddWinErrCode(RPC_S_NOTHING_TO_EXPORT);
  AddWinErrCode(RPC_S_INCOMPLETE_NAME);
  AddWinErrCode(RPC_S_INVALID_VERS_OPTION);
  AddWinErrCode(RPC_S_NO_MORE_MEMBERS);
  AddWinErrCode(RPC_S_NOT_ALL_OBJS_UNEXPORTED);
  AddWinErrCode(RPC_S_INTERFACE_NOT_FOUND);
  AddWinErrCode(RPC_S_ENTRY_ALREADY_EXISTS);
  AddWinErrCode(RPC_S_ENTRY_NOT_FOUND);
  AddWinErrCode(RPC_S_NAME_SERVICE_UNAVAILABLE);
  AddWinErrCode(RPC_S_INVALID_NAF_ID);
  AddWinErrCode(RPC_S_CANNOT_SUPPORT);
  AddWinErrCode(RPC_S_NO_CONTEXT_AVAILABLE);
  AddWinErrCode(RPC_S_INTERNAL_ERROR);
  AddWinErrCode(RPC_S_ZERO_DIVIDE);
  AddWinErrCode(RPC_S_ADDRESS_ERROR);
  AddWinErrCode(RPC_S_FP_DIV_ZERO);
  AddWinErrCode(RPC_S_FP_UNDERFLOW);
  AddWinErrCode(RPC_S_FP_OVERFLOW);
  AddWinErrCode(RPC_X_NO_MORE_ENTRIES);
  AddWinErrCode(RPC_X_SS_CHAR_TRANS_OPEN_FAIL);
  AddWinErrCode(RPC_X_SS_CHAR_TRANS_SHORT_FILE);
  AddWinErrCode(RPC_X_SS_IN_NULL_CONTEXT);
  AddWinErrCode(RPC_X_SS_CONTEXT_DAMAGED);
  AddWinErrCode(RPC_X_SS_HANDLES_MISMATCH);
  AddWinErrCode(RPC_X_SS_CANNOT_GET_CALL_HANDLE);
  AddWinErrCode(RPC_X_NULL_REF_POINTER);
  AddWinErrCode(RPC_X_ENUM_VALUE_OUT_OF_RANGE);
  AddWinErrCode(RPC_X_BYTE_COUNT_TOO_SMALL);
  AddWinErrCode(RPC_X_BAD_STUB_DATA);
  AddWinErrCode(ERROR_INVALID_USER_BUFFER);
  AddWinErrCode(ERROR_UNRECOGNIZED_MEDIA);
  AddWinErrCode(ERROR_NO_TRUST_LSA_SECRET);
  AddWinErrCode(ERROR_NO_TRUST_SAM_ACCOUNT);
  AddWinErrCode(ERROR_TRUSTED_DOMAIN_FAILURE);
  AddWinErrCode(ERROR_TRUSTED_RELATIONSHIP_FAILURE);
  AddWinErrCode(ERROR_TRUST_FAILURE);
  AddWinErrCode(RPC_S_CALL_IN_PROGRESS);
  AddWinErrCode(ERROR_NETLOGON_NOT_STARTED);
  AddWinErrCode(ERROR_ACCOUNT_EXPIRED);
  AddWinErrCode(ERROR_REDIRECTOR_HAS_OPEN_HANDLES);
  AddWinErrCode(ERROR_PRINTER_DRIVER_ALREADY_INSTALLED);
  AddWinErrCode(ERROR_UNKNOWN_PORT);
  AddWinErrCode(ERROR_UNKNOWN_PRINTER_DRIVER);
  AddWinErrCode(ERROR_UNKNOWN_PRINTPROCESSOR);
  AddWinErrCode(ERROR_INVALID_SEPARATOR_FILE);
  AddWinErrCode(ERROR_INVALID_PRIORITY);
  AddWinErrCode(ERROR_INVALID_PRINTER_NAME);
  AddWinErrCode(ERROR_PRINTER_ALREADY_EXISTS);
  AddWinErrCode(ERROR_INVALID_PRINTER_COMMAND);
  AddWinErrCode(ERROR_INVALID_DATATYPE);
  AddWinErrCode(ERROR_INVALID_ENVIRONMENT);
  AddWinErrCode(RPC_S_NO_MORE_BINDINGS);
  AddWinErrCode(ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT);
  AddWinErrCode(ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT);
  AddWinErrCode(ERROR_NOLOGON_SERVER_TRUST_ACCOUNT);
  AddWinErrCode(ERROR_DOMAIN_TRUST_INCONSISTENT);
  AddWinErrCode(ERROR_SERVER_HAS_OPEN_HANDLES);
  AddWinErrCode(ERROR_RESOURCE_DATA_NOT_FOUND);
  AddWinErrCode(ERROR_RESOURCE_TYPE_NOT_FOUND);
  AddWinErrCode(ERROR_RESOURCE_NAME_NOT_FOUND);
  AddWinErrCode(ERROR_RESOURCE_LANG_NOT_FOUND);
  AddWinErrCode(ERROR_NOT_ENOUGH_QUOTA);
  AddWinErrCode(RPC_S_NO_INTERFACES);
  AddWinErrCode(RPC_S_CALL_CANCELLED);
  AddWinErrCode(RPC_S_BINDING_INCOMPLETE);
  AddWinErrCode(RPC_S_COMM_FAILURE);
  AddWinErrCode(RPC_S_UNSUPPORTED_AUTHN_LEVEL);
  AddWinErrCode(RPC_S_NO_PRINC_NAME);
  AddWinErrCode(RPC_S_NOT_RPC_ERROR);
  AddWinErrCode(RPC_S_UUID_LOCAL_ONLY);
  AddWinErrCode(RPC_S_SEC_PKG_ERROR);
  AddWinErrCode(RPC_S_NOT_CANCELLED);
  AddWinErrCode(RPC_X_INVALID_ES_ACTION);
  AddWinErrCode(RPC_X_WRONG_ES_VERSION);
  AddWinErrCode(RPC_X_WRONG_STUB_VERSION);
  AddWinErrCode(RPC_S_GROUP_MEMBER_NOT_FOUND);
  AddWinErrCode(EPT_S_CANT_CREATE);
  AddWinErrCode(RPC_S_INVALID_OBJECT);
  AddWinErrCode(ERROR_INVALID_TIME);
  AddWinErrCode(ERROR_INVALID_FORM_NAME);
  AddWinErrCode(ERROR_INVALID_FORM_SIZE);
  AddWinErrCode(ERROR_ALREADY_WAITING);
  AddWinErrCode(ERROR_PRINTER_DELETED);
  AddWinErrCode(ERROR_INVALID_PRINTER_STATE);
  AddWinErrCode(ERROR_PASSWORD_MUST_CHANGE);
  AddWinErrCode(ERROR_DOMAIN_CONTROLLER_NOT_FOUND);
  AddWinErrCode(ERROR_ACCOUNT_LOCKED_OUT);
  AddWinErrCode(ERROR_NO_BROWSER_SERVERS_FOUND);
  AddWinErrCode(ERROR_INVALID_PIXEL_FORMAT);
  AddWinErrCode(ERROR_BAD_DRIVER);
  AddWinErrCode(ERROR_INVALID_WINDOW_STYLE);
  AddWinErrCode(ERROR_METAFILE_NOT_SUPPORTED);
  AddWinErrCode(ERROR_TRANSFORM_NOT_SUPPORTED);
  AddWinErrCode(ERROR_CLIPPING_NOT_SUPPORTED);
  AddWinErrCode(ERROR_UNKNOWN_PRINT_MONITOR);
  AddWinErrCode(ERROR_PRINTER_DRIVER_IN_USE);
  AddWinErrCode(ERROR_SPOOL_FILE_NOT_FOUND);
  AddWinErrCode(ERROR_SPL_NO_STARTDOC);
  AddWinErrCode(ERROR_SPL_NO_ADDJOB);
  AddWinErrCode(ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED);
  AddWinErrCode(ERROR_PRINT_MONITOR_ALREADY_INSTALLED);
  AddWinErrCode(ERROR_WINS_INTERNAL);
  AddWinErrCode(ERROR_CAN_NOT_DEL_LOCAL_WINS);
  AddWinErrCode(ERROR_STATIC_INIT);
  AddWinErrCode(ERROR_INC_BACKUP);
  AddWinErrCode(ERROR_FULL_BACKUP);
  AddWinErrCode(ERROR_REC_NON_EXISTENT);
  AddWinErrCode(ERROR_RPL_NOT_ALLOWED);
  AddWinErrCode(E_UNEXPECTED);
  AddWinErrCode(E_NOTIMPL);
  AddWinErrCode(E_OUTOFMEMORY);
  AddWinErrCode(E_INVALIDARG);
  AddWinErrCode(E_NOINTERFACE);
  AddWinErrCode(E_POINTER);
  AddWinErrCode(E_HANDLE);
  AddWinErrCode(E_ABORT);
  AddWinErrCode(E_FAIL);
  AddWinErrCode(E_ACCESSDENIED);
  AddWinErrCode(E_NOTIMPL);
  AddWinErrCode(E_OUTOFMEMORY);
  AddWinErrCode(E_INVALIDARG);
  AddWinErrCode(E_NOINTERFACE);
  AddWinErrCode(E_POINTER);
  AddWinErrCode(E_HANDLE);
  AddWinErrCode(E_ABORT);
  AddWinErrCode(E_FAIL);
  AddWinErrCode(E_ACCESSDENIED);
  AddWinErrCode(CO_E_INIT_TLS);
  AddWinErrCode(CO_E_INIT_SHARED_ALLOCATOR);
  AddWinErrCode(CO_E_INIT_MEMORY_ALLOCATOR);
  AddWinErrCode(CO_E_INIT_CLASS_CACHE);
  AddWinErrCode(CO_E_INIT_RPC_CHANNEL);
  AddWinErrCode(CO_E_INIT_TLS_SET_CHANNEL_CONTROL);
  AddWinErrCode(CO_E_INIT_TLS_CHANNEL_CONTROL);
  AddWinErrCode(CO_E_INIT_UNACCEPTED_USER_ALLOCATOR);
  AddWinErrCode(CO_E_INIT_SCM_MUTEX_EXISTS);
  AddWinErrCode(CO_E_INIT_SCM_FILE_MAPPING_EXISTS);
  AddWinErrCode(CO_E_INIT_SCM_MAP_VIEW_OF_FILE);
  AddWinErrCode(CO_E_INIT_SCM_EXEC_FAILURE);
  AddWinErrCode(CO_E_INIT_ONLY_SINGLE_THREADED);
  AddWinErrCode(OLE_E_FIRST);
  AddWinErrCode(OLE_E_LAST);
  AddWinErrCode(OLE_S_FIRST);
  AddWinErrCode(OLE_S_LAST);
  AddWinErrCode(OLE_E_OLEVERB);
  AddWinErrCode(OLE_E_ADVF);
  AddWinErrCode(OLE_E_ENUM_NOMORE);
  AddWinErrCode(OLE_E_ADVISENOTSUPPORTED);
  AddWinErrCode(OLE_E_NOCONNECTION);
  AddWinErrCode(OLE_E_NOTRUNNING);
  AddWinErrCode(OLE_E_NOCACHE);
  AddWinErrCode(OLE_E_BLANK);
  AddWinErrCode(OLE_E_CLASSDIFF);
  AddWinErrCode(OLE_E_CANT_GETMONIKER);
  AddWinErrCode(OLE_E_CANT_BINDTOSOURCE);
  AddWinErrCode(OLE_E_STATIC);
  AddWinErrCode(OLE_E_PROMPTSAVECANCELLED);
  AddWinErrCode(OLE_E_INVALIDRECT);
  AddWinErrCode(OLE_E_WRONGCOMPOBJ);
  AddWinErrCode(OLE_E_INVALIDHWND);
  AddWinErrCode(OLE_E_NOT_INPLACEACTIVE);
  AddWinErrCode(OLE_E_CANTCONVERT);
  AddWinErrCode(OLE_E_NOSTORAGE);
  AddWinErrCode(DV_E_FORMATETC);
  AddWinErrCode(DV_E_DVTARGETDEVICE);
  AddWinErrCode(DV_E_STGMEDIUM);
  AddWinErrCode(DV_E_STATDATA);
  AddWinErrCode(DV_E_LINDEX);
  AddWinErrCode(DV_E_TYMED);
  AddWinErrCode(DV_E_CLIPFORMAT);
  AddWinErrCode(DV_E_DVASPECT);
  AddWinErrCode(DV_E_DVTARGETDEVICE_SIZE);
  AddWinErrCode(DV_E_NOIVIEWOBJECT);
  AddWinErrCode(DRAGDROP_E_FIRST);
  AddWinErrCode(DRAGDROP_E_LAST);
  AddWinErrCode(DRAGDROP_S_FIRST);
  AddWinErrCode(DRAGDROP_S_LAST);
  AddWinErrCode(DRAGDROP_E_NOTREGISTERED);
  AddWinErrCode(DRAGDROP_E_ALREADYREGISTERED);
  AddWinErrCode(DRAGDROP_E_INVALIDHWND);
  AddWinErrCode(CLASSFACTORY_E_FIRST);
  AddWinErrCode(CLASSFACTORY_E_LAST);
  AddWinErrCode(CLASSFACTORY_S_FIRST);
  AddWinErrCode(CLASSFACTORY_S_LAST);
  AddWinErrCode(CLASS_E_NOAGGREGATION);
  AddWinErrCode(CLASS_E_CLASSNOTAVAILABLE);
  AddWinErrCode(MARSHAL_E_FIRST);
  AddWinErrCode(MARSHAL_E_LAST);
  AddWinErrCode(MARSHAL_S_FIRST);
  AddWinErrCode(MARSHAL_S_LAST);
  AddWinErrCode(DATA_E_FIRST);
  AddWinErrCode(DATA_E_LAST);
  AddWinErrCode(DATA_S_FIRST);
  AddWinErrCode(DATA_S_LAST);
  AddWinErrCode(VIEW_E_FIRST);
  AddWinErrCode(VIEW_E_LAST);
  AddWinErrCode(VIEW_S_FIRST);
  AddWinErrCode(VIEW_S_LAST);
  AddWinErrCode(VIEW_E_DRAW);
  AddWinErrCode(REGDB_E_FIRST);
  AddWinErrCode(REGDB_E_LAST);
  AddWinErrCode(REGDB_S_FIRST);
  AddWinErrCode(REGDB_S_LAST);
  AddWinErrCode(REGDB_E_READREGDB);
  AddWinErrCode(REGDB_E_WRITEREGDB);
  AddWinErrCode(REGDB_E_KEYMISSING);
  AddWinErrCode(REGDB_E_INVALIDVALUE);
  AddWinErrCode(REGDB_E_CLASSNOTREG);
  AddWinErrCode(REGDB_E_IIDNOTREG);
  AddWinErrCode(CACHE_E_FIRST);
  AddWinErrCode(CACHE_E_LAST);
  AddWinErrCode(CACHE_S_FIRST);
  AddWinErrCode(CACHE_S_LAST);
  AddWinErrCode(CACHE_E_NOCACHE_UPDATED);
  AddWinErrCode(OLEOBJ_E_FIRST);
  AddWinErrCode(OLEOBJ_E_LAST);
  AddWinErrCode(OLEOBJ_S_FIRST);
  AddWinErrCode(OLEOBJ_S_LAST);
  AddWinErrCode(OLEOBJ_E_NOVERBS);
  AddWinErrCode(OLEOBJ_E_INVALIDVERB);
  AddWinErrCode(CLIENTSITE_E_FIRST);
  AddWinErrCode(CLIENTSITE_E_LAST);
  AddWinErrCode(CLIENTSITE_S_FIRST);
  AddWinErrCode(CLIENTSITE_S_LAST);
  AddWinErrCode(INPLACE_E_NOTUNDOABLE);
  AddWinErrCode(INPLACE_E_NOTOOLSPACE);
  AddWinErrCode(INPLACE_E_FIRST);
  AddWinErrCode(INPLACE_E_LAST);
  AddWinErrCode(INPLACE_S_FIRST);
  AddWinErrCode(INPLACE_S_LAST);
  AddWinErrCode(ENUM_E_FIRST);
  AddWinErrCode(ENUM_E_LAST);
  AddWinErrCode(ENUM_S_FIRST);
  AddWinErrCode(ENUM_S_LAST);
  AddWinErrCode(CONVERT10_E_FIRST);
  AddWinErrCode(CONVERT10_E_LAST);
  AddWinErrCode(CONVERT10_S_FIRST);
  AddWinErrCode(CONVERT10_S_LAST);
  AddWinErrCode(CONVERT10_E_OLESTREAM_GET);
  AddWinErrCode(CONVERT10_E_OLESTREAM_PUT);
  AddWinErrCode(CONVERT10_E_OLESTREAM_FMT);
  AddWinErrCode(CONVERT10_E_OLESTREAM_BITMAP_TO_DIB);
  AddWinErrCode(CONVERT10_E_STG_FMT);
  AddWinErrCode(CONVERT10_E_STG_NO_STD_STREAM);
  AddWinErrCode(CONVERT10_E_STG_DIB_TO_BITMAP);
  AddWinErrCode(CLIPBRD_E_FIRST);
  AddWinErrCode(CLIPBRD_E_LAST);
  AddWinErrCode(CLIPBRD_S_FIRST);
  AddWinErrCode(CLIPBRD_S_LAST);
  AddWinErrCode(CLIPBRD_E_CANT_OPEN);
  AddWinErrCode(CLIPBRD_E_CANT_EMPTY);
  AddWinErrCode(CLIPBRD_E_CANT_SET);
  AddWinErrCode(CLIPBRD_E_BAD_DATA);
  AddWinErrCode(CLIPBRD_E_CANT_CLOSE);
  AddWinErrCode(MK_E_FIRST);
  AddWinErrCode(MK_E_LAST);
  AddWinErrCode(MK_S_FIRST);
  AddWinErrCode(MK_S_LAST);
  AddWinErrCode(MK_E_CONNECTMANUALLY);
  AddWinErrCode(MK_E_EXCEEDEDDEADLINE);
  AddWinErrCode(MK_E_NEEDGENERIC);
  AddWinErrCode(MK_E_UNAVAILABLE);
  AddWinErrCode(MK_E_SYNTAX);
  AddWinErrCode(MK_E_NOOBJECT);
  AddWinErrCode(MK_E_INVALIDEXTENSION);
  AddWinErrCode(MK_E_INTERMEDIATEINTERFACENOTSUPPORTED);
  AddWinErrCode(MK_E_NOTBINDABLE);
  AddWinErrCode(MK_E_NOTBOUND);
  AddWinErrCode(MK_E_CANTOPENFILE);
  AddWinErrCode(MK_E_MUSTBOTHERUSER);
  AddWinErrCode(MK_E_NOINVERSE);
  AddWinErrCode(MK_E_NOSTORAGE);
  AddWinErrCode(MK_E_NOPREFIX);
  AddWinErrCode(MK_E_ENUMERATION_FAILED);
  AddWinErrCode(CO_E_FIRST);
  AddWinErrCode(CO_E_LAST);
  AddWinErrCode(CO_S_FIRST);
  AddWinErrCode(CO_S_LAST);
  AddWinErrCode(CO_E_NOTINITIALIZED);
  AddWinErrCode(CO_E_ALREADYINITIALIZED);
  AddWinErrCode(CO_E_CANTDETERMINECLASS);
  AddWinErrCode(CO_E_CLASSSTRING);
  AddWinErrCode(CO_E_IIDSTRING);
  AddWinErrCode(CO_E_APPNOTFOUND);
  AddWinErrCode(CO_E_APPSINGLEUSE);
  AddWinErrCode(CO_E_ERRORINAPP);
  AddWinErrCode(CO_E_DLLNOTFOUND);
  AddWinErrCode(CO_E_ERRORINDLL);
  AddWinErrCode(CO_E_WRONGOSFORAPP);
  AddWinErrCode(CO_E_OBJNOTREG);
  AddWinErrCode(CO_E_OBJISREG);
  AddWinErrCode(CO_E_OBJNOTCONNECTED);
  AddWinErrCode(CO_E_APPDIDNTREG);
  AddWinErrCode(CO_E_RELEASED);
  AddWinErrCode(OLE_S_USEREG);
  AddWinErrCode(OLE_S_STATIC);
  AddWinErrCode(OLE_S_MAC_CLIPFORMAT);
  AddWinErrCode(DRAGDROP_S_DROP);
  AddWinErrCode(DRAGDROP_S_CANCEL);
  AddWinErrCode(DRAGDROP_S_USEDEFAULTCURSORS);
  AddWinErrCode(DATA_S_SAMEFORMATETC);
  AddWinErrCode(VIEW_S_ALREADY_FROZEN);
  AddWinErrCode(CACHE_S_FORMATETC_NOTSUPPORTED);
  AddWinErrCode(CACHE_S_SAMECACHE);
  AddWinErrCode(CACHE_S_SOMECACHES_NOTUPDATED);
  AddWinErrCode(OLEOBJ_S_INVALIDVERB);
  AddWinErrCode(OLEOBJ_S_CANNOT_DOVERB_NOW);
  AddWinErrCode(OLEOBJ_S_INVALIDHWND);
  AddWinErrCode(INPLACE_S_TRUNCATED);
  AddWinErrCode(CONVERT10_S_NO_PRESENTATION);
  AddWinErrCode(MK_S_REDUCED_TO_SELF);
  AddWinErrCode(MK_S_ME);
  AddWinErrCode(MK_S_HIM);
  AddWinErrCode(MK_S_US);
  AddWinErrCode(MK_S_MONIKERALREADYREGISTERED);
  AddWinErrCode(CO_E_CLASS_CREATE_FAILED);
  AddWinErrCode(CO_E_SCM_ERROR);
  AddWinErrCode(CO_E_SCM_RPC_FAILURE);
  AddWinErrCode(CO_E_BAD_PATH);
  AddWinErrCode(CO_E_SERVER_EXEC_FAILURE);
  AddWinErrCode(CO_E_OBJSRV_RPC_FAILURE);
  AddWinErrCode(MK_E_NO_NORMALIZED);
  AddWinErrCode(CO_E_SERVER_STOPPING);
  AddWinErrCode(MEM_E_INVALID_ROOT);
  AddWinErrCode(MEM_E_INVALID_LINK);
  AddWinErrCode(MEM_E_INVALID_SIZE);
  AddWinErrCode(DISP_E_UNKNOWNINTERFACE);
  AddWinErrCode(DISP_E_MEMBERNOTFOUND);
  AddWinErrCode(DISP_E_PARAMNOTFOUND);
  AddWinErrCode(DISP_E_TYPEMISMATCH);
  AddWinErrCode(DISP_E_UNKNOWNNAME);
  AddWinErrCode(DISP_E_NONAMEDARGS);
  AddWinErrCode(DISP_E_BADVARTYPE);
  AddWinErrCode(DISP_E_EXCEPTION);
  AddWinErrCode(DISP_E_OVERFLOW);
  AddWinErrCode(DISP_E_BADINDEX);
  AddWinErrCode(DISP_E_UNKNOWNLCID);
  AddWinErrCode(DISP_E_ARRAYISLOCKED);
  AddWinErrCode(DISP_E_BADPARAMCOUNT);
  AddWinErrCode(DISP_E_PARAMNOTOPTIONAL);
  AddWinErrCode(DISP_E_BADCALLEE);
  AddWinErrCode(DISP_E_NOTACOLLECTION);
  AddWinErrCode(TYPE_E_BUFFERTOOSMALL);
  AddWinErrCode(TYPE_E_INVDATAREAD);
  AddWinErrCode(TYPE_E_UNSUPFORMAT);
  AddWinErrCode(TYPE_E_REGISTRYACCESS);
  AddWinErrCode(TYPE_E_LIBNOTREGISTERED);
  AddWinErrCode(TYPE_E_UNDEFINEDTYPE);
  AddWinErrCode(TYPE_E_QUALIFIEDNAMEDISALLOWED);
  AddWinErrCode(TYPE_E_INVALIDSTATE);
  AddWinErrCode(TYPE_E_WRONGTYPEKIND);
  AddWinErrCode(TYPE_E_ELEMENTNOTFOUND);
  AddWinErrCode(TYPE_E_AMBIGUOUSNAME);
  AddWinErrCode(TYPE_E_NAMECONFLICT);
  AddWinErrCode(TYPE_E_UNKNOWNLCID);
  AddWinErrCode(TYPE_E_DLLFUNCTIONNOTFOUND);
  AddWinErrCode(TYPE_E_BADMODULEKIND);
  AddWinErrCode(TYPE_E_SIZETOOBIG);
  AddWinErrCode(TYPE_E_DUPLICATEID);
  AddWinErrCode(TYPE_E_INVALIDID);
  AddWinErrCode(TYPE_E_TYPEMISMATCH);
  AddWinErrCode(TYPE_E_OUTOFBOUNDS);
  AddWinErrCode(TYPE_E_IOERROR);
  AddWinErrCode(TYPE_E_CANTCREATETMPFILE);
  AddWinErrCode(TYPE_E_CANTLOADLIBRARY);
  AddWinErrCode(TYPE_E_INCONSISTENTPROPFUNCS);
  AddWinErrCode(TYPE_E_CIRCULARTYPE);
  AddWinErrCode(STG_E_INVALIDFUNCTION);
  AddWinErrCode(STG_E_FILENOTFOUND);
  AddWinErrCode(STG_E_PATHNOTFOUND);
  AddWinErrCode(STG_E_TOOMANYOPENFILES);
  AddWinErrCode(STG_E_ACCESSDENIED);
  AddWinErrCode(STG_E_INVALIDHANDLE);
  AddWinErrCode(STG_E_INSUFFICIENTMEMORY);
  AddWinErrCode(STG_E_INVALIDPOINTER);
  AddWinErrCode(STG_E_NOMOREFILES);
  AddWinErrCode(STG_E_DISKISWRITEPROTECTED);
  AddWinErrCode(STG_E_SEEKERROR);
  AddWinErrCode(STG_E_WRITEFAULT);
  AddWinErrCode(STG_E_READFAULT);
  AddWinErrCode(STG_E_SHAREVIOLATION);
  AddWinErrCode(STG_E_LOCKVIOLATION);
  AddWinErrCode(STG_E_FILEALREADYEXISTS);
  AddWinErrCode(STG_E_INVALIDPARAMETER);
  AddWinErrCode(STG_E_MEDIUMFULL);
  AddWinErrCode(STG_E_ABNORMALAPIEXIT);
  AddWinErrCode(STG_E_INVALIDHEADER);
  AddWinErrCode(STG_E_INVALIDNAME);
  AddWinErrCode(STG_E_UNKNOWN);
  AddWinErrCode(STG_E_UNIMPLEMENTEDFUNCTION);
  AddWinErrCode(STG_E_INVALIDFLAG);
  AddWinErrCode(STG_E_INUSE);
  AddWinErrCode(STG_E_NOTCURRENT);
  AddWinErrCode(STG_E_REVERTED);
  AddWinErrCode(STG_E_CANTSAVE);
  AddWinErrCode(STG_E_OLDFORMAT);
  AddWinErrCode(STG_E_OLDDLL);
  AddWinErrCode(STG_E_SHAREREQUIRED);
  AddWinErrCode(STG_E_NOTFILEBASEDSTORAGE);
  AddWinErrCode(STG_E_EXTANTMARSHALLINGS);
  AddWinErrCode(STG_S_CONVERTED);
  AddWinErrCode(RPC_E_CALL_REJECTED);
  AddWinErrCode(RPC_E_CALL_CANCELED);
  AddWinErrCode(RPC_E_CANTPOST_INSENDCALL);
  AddWinErrCode(RPC_E_CANTCALLOUT_INASYNCCALL);
  AddWinErrCode(RPC_E_CANTCALLOUT_INEXTERNALCALL);
  AddWinErrCode(RPC_E_CONNECTION_TERMINATED);
  AddWinErrCode(RPC_E_SERVER_DIED);
  AddWinErrCode(RPC_E_CLIENT_DIED);
  AddWinErrCode(RPC_E_INVALID_DATAPACKET);
  AddWinErrCode(RPC_E_CANTTRANSMIT_CALL);
  AddWinErrCode(RPC_E_CLIENT_CANTMARSHAL_DATA);
  AddWinErrCode(RPC_E_CLIENT_CANTUNMARSHAL_DATA);
  AddWinErrCode(RPC_E_SERVER_CANTMARSHAL_DATA);
  AddWinErrCode(RPC_E_SERVER_CANTUNMARSHAL_DATA);
  AddWinErrCode(RPC_E_INVALID_DATA);
  AddWinErrCode(RPC_E_INVALID_PARAMETER);
  AddWinErrCode(RPC_E_CANTCALLOUT_AGAIN);
  AddWinErrCode(RPC_E_SERVER_DIED_DNE);
  AddWinErrCode(RPC_E_SYS_CALL_FAILED);
  AddWinErrCode(RPC_E_OUT_OF_RESOURCES);
  AddWinErrCode(RPC_E_ATTEMPTED_MULTITHREAD);
  AddWinErrCode(RPC_E_NOT_REGISTERED);
  AddWinErrCode(RPC_E_FAULT);
  AddWinErrCode(RPC_E_SERVERFAULT);
  AddWinErrCode(RPC_E_CHANGED_MODE);
  AddWinErrCode(RPC_E_INVALIDMETHOD);
  AddWinErrCode(RPC_E_DISCONNECTED);
  AddWinErrCode(RPC_E_RETRY);
  AddWinErrCode(RPC_E_SERVERCALL_RETRYLATER);
  AddWinErrCode(RPC_E_SERVERCALL_REJECTED);
  AddWinErrCode(RPC_E_INVALID_CALLDATA);
  AddWinErrCode(RPC_E_CANTCALLOUT_ININPUTSYNCCALL);
  AddWinErrCode(RPC_E_WRONG_THREAD);
  AddWinErrCode(RPC_E_THREAD_NOT_INIT);
  AddWinErrCode(RPC_E_UNEXPECTED);
  }

WinErrorList::~WinErrorList()
  {
  RemoveAll();
  }

const char * FindWinError(DWORD Code)
  {
  int n=WinErrors.GetSize();
  for (int i=0; i<n; i++)
    if (WinErrors[i].Code==Code)
      return WinErrors[i].Msg;
  return "WinError ???";
  };


//===========================================================================
//
//
//
//===========================================================================

long ConditionBlk::m_lSeqNo=1;
long ConditionBlk::m_lSeqNoAtRunStart=0;

ConditionBlk::ConditionBlk()
  { 
  pInfo=NULL;
  };

//---------------------------------------------------------------------------
  
ConditionBlk::~ConditionBlk() 
  { 
  delete pInfo; 
  }
   
//---------------------------------------------------------------------------

char * ConditionBlk::GetTxtInfo(int No, flag SetIt, dword &Flag)
  {
  char *pS=GetCITxt(No);
  if (pS==NULL)
    pS="E\tUnknown Error";
  char * pT=strchr(pS, '\t');
  char C0=0;
  char C1=0;

  if (pT)
    {
    pT++;
    C0=pS[0];
    C1=pS[1];
    }
  else
    pT=pS;
  if (SetIt)
    {
    Flag= ((C1=='p') ? LogFlag_FromPGM : 0) | LogFlag_Cond;
    switch (toupper(C0))
      {
      case 'F' : Flag|=LogFlag_Fatal  ; break;
      case 'S' : Flag|=LogFlag_Stop   ; break;
      case 'E' : Flag|=LogFlag_Error  ; break;
      case 'W' : Flag|=LogFlag_Warning; break;
      case 'C' : Flag|=LogFlag_Cmd    ; break;
      default  : Flag|=LogFlag_Note   ; break;
      }
    }
  else
    Flag=LogFlag_CondClear; 
  return pT;
  }

//---------------------------------------------------------------------------

void ConditionBlk::DoLog(int No, flag SetIt, long SeqNo)
  {
  dword Flag=0;
  char * pT=GetTxtInfo(No, SetIt, Flag);
  LogLn(Flag, CBTag(), 0, pT, SeqNo); 
// These 2 lines would add an error line 
//  if (SetIt)
//    LogLn((Flag & ~LogFlag_Cond), CBTag(), 0, pT, 0); 
  }

//---------------------------------------------------------------------------

flag ConditionBlk::TestCISetCntxt(int No, int Context)
  { 
  No+=Context;
  if (pInfo)
    {
    int n=Index(No);
    if (pInfo->EA.GetSize()<=n)
      pInfo->EA.SetSize(n+1);
    if ((pInfo->EA[n] & ErrMsk(No))!=0)
      return True;
    }
  return False;
  }

//---------------------------------------------------------------------------

flag ConditionBlk::DoSetCICntxt(int No, int Context)
  { 
  No+=Context;
  if (pInfo==NULL)
    pInfo=new ConditionInfo;
  int n=Index(No);
  if (pInfo->EA.GetSize()<=n)
    pInfo->EA.SetSize(n+1);
  if ((pInfo->EA[n] & ErrMsk(No))!=0 && m_lSeqNo>m_lSeqNoAtRunStart)
    return False;

  //dbgpln("SetCI %3i:%3i @%08x ", No-Context, Context, this);
  
  byte M1 = ErrMsk(No);
  byte M2=  TxtMsk(No);
  pInfo->EA[n] = (pInfo->EA[n] | M1) & ~M2;

  if (pInfo->SeqNo.GetSize()<=No)
    pInfo->SeqNo.SetSize(No+1);
  if (m_lSeqNo==0)
    m_lSeqNo++;
  pInfo->SeqNo[No]=m_lSeqNo++;
  return True;
  }

//---------------------------------------------------------------------------

flag ConditionBlk::SetCICntxt(int No, int Context, bool WithLog)
  { 
  if (DoSetCICntxt(No, Context))
    {
    No+=Context;
    if (WithLog)
      DoLog(No, True, pInfo->SeqNo[No]);
    CBChanged();
    return True;
    }
  return True; 
  };

//---------------------------------------------------------------------------

flag ConditionBlk::SetCICntxt(int No, int Context, bool WithLog, char * S) 
  { 
  if (DoSetCICntxt(No, Context))
    {
    No+=Context;
    int n=Index(No);

    pInfo->EA[n] = pInfo->EA[n] | TxtMsk(No);

    pStrng p;
    for (p=pInfo->ErrTexts.First(); p; p=pInfo->ErrTexts.Next())
      if (p->iIndex==No)
        break;
    if (p==NULL)
      {
      p=new Strng;
      pInfo->ErrTexts.Append(p);
      p->iIndex=No;
      }
    *p=S;
    if (WithLog)
      DoLog(No, True, pInfo->SeqNo[No]);
    CBChanged();
    return True;
    }

  return False; 
  };

//---------------------------------------------------------------------------

flag ConditionBlk::ClrCICntxt(int No, int Context, bool WithLog) 
  { 
  if (pInfo==NULL)
    return False;

  No+=Context;
  int n=Index(No);
  if (pInfo->EA.GetSize()<=n)
    return False;


  if ((pInfo->EA[n] & ErrMsk(No))!=0)
    {
    //dbgpln("ClrCI %3i:%3i @%08x ", No-Context, Context, this);
    if ((pInfo->EA[n] & TxtMsk(No))!=0)
      {
      pStrng p;
      for (p=pInfo->ErrTexts.First(); p; p=pInfo->ErrTexts.Next())
        if (p->iIndex==No)
          break;
      if (p)
        {
        pInfo->ErrTexts.Remove(p);
        delete p;
        }
      }
    
    byte EM = ~(ErrMsk(No) | TxtMsk(No));
    pInfo->EA[n] = (pInfo->EA[n] & EM);
    CBChanged();
    if (WithLog)
      DoLog(No, False, pInfo->SeqNo[No]);
    return True;
    }
  return False;
  };

//---------------------------------------------------------------------------

void ConditionBlk::ClrAllCIs() 
  {
  if (pInfo==NULL)
    return;
  int n=MaxIndex();
  for (int i=0; i<n; i++)
    ClrCICntxt(i, 0, true);
  }
//---------------------------------------------------------------------------

char * ConditionBlk::CBTag()
  {
  return "TagUnknown"; 
  };

//---------------------------------------------------------------------------

flag ConditionBlk::CIStrng(int No, pchar & pS)
  {
  // NB check CBCount is large enough.
  return 0;
  };

//---------------------------------------------------------------------------

flag ConditionBlk::GetAllCIs(Strng_List & C, int MaxNo)
  {
  return GetMyCIs(C, MaxNo);
  };

//---------------------------------------------------------------------------

char *ConditionBlk::GetCITxt(int No)
  {
  char *p;
  byte Bits=pInfo->EA[Index(No)];
  if (Bits & TxtMsk(No))
    {
    pStrng p;
    for (p=pInfo->ErrTexts.First(); p; p=pInfo->ErrTexts.Next())
      if (p->iIndex==No)
        return p->Str();
    return NULL;
    }
  else if (CIStrng(No, p))
    return p;
  return NULL;
  }

//---------------------------------------------------------------------------

flag ConditionBlk::GetMyCIs(Strng_List & C, int MaxNo)
  {
  if (pInfo==NULL)
    return False;

  int n=MaxIndex();
  for (int i=0; i<n && MaxNo>0; i++)
    if (pInfo->EA[Index(i)] & ErrMsk(i))
      {
      char *p=GetCITxt(i);
      if (p)
        C.Append(p);
      MaxNo--;
      }
  return True;
  };

//---------------------------------------------------------------------------

int ConditionBlk::CountMyCIs(int MaxNo, dword RqdFlags)
  {
  if (pInfo==NULL)
    return 0;

  int Cnt=0;
  int n=MaxIndex();
  for (int i=0; i<n && Cnt<MaxNo; i++)
    {
    if (pInfo->EA[Index(i)] & ErrMsk(i))
      {
      if (RqdFlags==0)
        Cnt++;
      else
        {
        dword Flag;
        char * pT=GetTxtInfo(i, true, Flag);
        if (Flag & RqdFlags)
          Cnt++; 
        }
      }
    }
  return Cnt;
  };

//---------------------------------------------------------------------------

int ConditionBlk::CountAllCIs(int MaxNo, dword RqdFlags)
  {
  return CountMyCIs(MaxNo, RqdFlags);
  };

//===========================================================================
//
//
//
//===========================================================================

CScdException::CScdException()
  {
  m_ErrNo=0;
  m_pszMessage=NULL;
  };
CScdException::CScdException(long i_ErrNo,  char* i_pszMessage )
  {
  m_ErrNo=i_ErrNo;
  m_pszMessage=new char[strlen(i_pszMessage)+1];
  strcpy(m_pszMessage, i_pszMessage);
  };
CScdException::~CScdException()
  {
  delete m_pszMessage; 
  };

//===========================================================================
//
//
//
//===========================================================================

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "ssactivecell.h"


/////////////////////////////////////////////////////////////////////////////
// CSSActiveCell properties

long CSSActiveCell::GetTop()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CSSActiveCell::SetTop(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CSSActiveCell::GetLeft()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CSSActiveCell::SetLeft(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CSSActiveCell::GetHeight()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CSSActiveCell::SetHeight(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CSSActiveCell::GetWidth()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CSSActiveCell::SetWidth(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

CString CSSActiveCell::GetStyleSet()
{
	CString result;
	GetProperty(0x5, VT_BSTR, (void*)&result);
	return result;
}

void CSSActiveCell::SetStyleSet(LPCTSTR propVal)
{
	SetProperty(0x5, VT_BSTR, propVal);
}

CString CSSActiveCell::GetText()
{
	CString result;
	GetProperty(0x6, VT_BSTR, (void*)&result);
	return result;
}

void CSSActiveCell::SetText(LPCTSTR propVal)
{
	SetProperty(0x6, VT_BSTR, propVal);
}

VARIANT CSSActiveCell::GetValue()
{
	VARIANT result;
	GetProperty(0x7, VT_VARIANT, (void*)&result);
	return result;
}

void CSSActiveCell::SetValue(const VARIANT& propVal)
{
	SetProperty(0x7, VT_VARIANT, &propVal);
}

CString CSSActiveCell::GetSelText()
{
	CString result;
	GetProperty(0x8, VT_BSTR, (void*)&result);
	return result;
}

void CSSActiveCell::SetSelText(LPCTSTR propVal)
{
	SetProperty(0x8, VT_BSTR, propVal);
}

short CSSActiveCell::GetSelLength()
{
	short result;
	GetProperty(0x9, VT_I2, (void*)&result);
	return result;
}

void CSSActiveCell::SetSelLength(short propVal)
{
	SetProperty(0x9, VT_I2, propVal);
}

short CSSActiveCell::GetSelStart()
{
	short result;
	GetProperty(0xa, VT_I2, (void*)&result);
	return result;
}

void CSSActiveCell::SetSelStart(short propVal)
{
	SetProperty(0xa, VT_I2, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CSSActiveCell operations

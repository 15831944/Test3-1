// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "ssgroup.h"

// Dispatch interfaces referenced by this interface
#include "ssgroupcolumns.h"


/////////////////////////////////////////////////////////////////////////////
// CSSGroup properties

CString CSSGroup::GetCaption()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CSSGroup::SetCaption(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

long CSSGroup::GetCaptionAlignment()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CSSGroup::SetCaptionAlignment(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

BOOL CSSGroup::GetAllowSizing()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CSSGroup::SetAllowSizing(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

float CSSGroup::GetLeft()
{
	float result;
	GetProperty(0x4, VT_R4, (void*)&result);
	return result;
}

void CSSGroup::SetLeft(float propVal)
{
	SetProperty(0x4, VT_R4, propVal);
}

float CSSGroup::GetTop()
{
	float result;
	GetProperty(0x5, VT_R4, (void*)&result);
	return result;
}

void CSSGroup::SetTop(float propVal)
{
	SetProperty(0x5, VT_R4, propVal);
}

BOOL CSSGroup::GetVisible()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CSSGroup::SetVisible(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

float CSSGroup::GetWidth()
{
	float result;
	GetProperty(0x7, VT_R4, (void*)&result);
	return result;
}

void CSSGroup::SetWidth(float propVal)
{
	SetProperty(0x7, VT_R4, propVal);
}

BOOL CSSGroup::GetSelected()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CSSGroup::SetSelected(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

long CSSGroup::GetHeadForeColor()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CSSGroup::SetHeadForeColor(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CSSGroup::GetHeadBackColor()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CSSGroup::SetHeadBackColor(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

BOOL CSSGroup::GetHasHeadForeColor()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CSSGroup::SetHasHeadForeColor(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

BOOL CSSGroup::GetHasHeadBackColor()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CSSGroup::SetHasHeadBackColor(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

VARIANT CSSGroup::GetTagVariant()
{
	VARIANT result;
	GetProperty(0xd, VT_VARIANT, (void*)&result);
	return result;
}

void CSSGroup::SetTagVariant(const VARIANT& propVal)
{
	SetProperty(0xd, VT_VARIANT, &propVal);
}

CString CSSGroup::GetHeadStyleSet()
{
	CString result;
	GetProperty(0xe, VT_BSTR, (void*)&result);
	return result;
}

void CSSGroup::SetHeadStyleSet(LPCTSTR propVal)
{
	SetProperty(0xe, VT_BSTR, propVal);
}

CString CSSGroup::GetStyleSet()
{
	CString result;
	GetProperty(0xf, VT_BSTR, (void*)&result);
	return result;
}

void CSSGroup::SetStyleSet(LPCTSTR propVal)
{
	SetProperty(0xf, VT_BSTR, propVal);
}

short CSSGroup::GetPosition()
{
	short result;
	GetProperty(0x10, VT_I2, (void*)&result);
	return result;
}

void CSSGroup::SetPosition(short propVal)
{
	SetProperty(0x10, VT_I2, propVal);
}

CSSGroupColumns CSSGroup::GetColumns()
{
	LPDISPATCH pDispatch;
	GetProperty(0x3e9, VT_DISPATCH, (void*)&pDispatch);
	return CSSGroupColumns(pDispatch);
}

void CSSGroup::SetColumns(LPDISPATCH propVal)
{
	SetProperty(0x3e9, VT_DISPATCH, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CSSGroup operations

short CSSGroup::ColPosition(short ColPos)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		ColPos);
	return result;
}

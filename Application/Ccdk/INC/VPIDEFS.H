//================== SysCAD - Copyright Kenwalt (Pty) Ltd ===================
// $Nokeywords: $
//===========================================================================
/******************************* VPIDEFS.H *********************************/
/*************************** View prototypes *******************************/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!(C) Copyright 1989, 1990, 1991 Building Block Software!!!!!!!!*/
/*!!!!!!!!                    All rights reserved                  !!!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
#ifndef VPIDEFS
#define VPIDEFS

#include <vpdefs.h>
#include <c2defs.h>

extern  VP_VIEWPORT vpi_create __(( REAL DUMMY0 [3], REAL DUMMY1 [3], 
            REAL DUMMY2 [3], REAL DUMMY3 , REAL DUMMY4 , REAL DUMMY5 , 
            REAL DUMMY6 , GR_COLOR DUMMY7 , GR_COLOR DUMMY8 )) ;
extern  void        vpi_free __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_setup __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_restore __(( VP_VIEWPORT DUMMY0 , ANY DUMMY1 )) ;
extern  ANY         vpi_save __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_clip __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_unclip __(( VP_VIEWPORT DUMMY0 )) ;
extern  void        vpi_show __(( VP_VIEWPORT DUMMY0 )) ;
extern  void        vpi_fill __(( VP_VIEWPORT DUMMY0 )) ;
extern  void        vpi_border __(( VP_VIEWPORT DUMMY0 )) ;
extern  void        vpi_unshow __(( VP_VIEWPORT DUMMY0 , GR_COLOR DUMMY1 )) ;
extern  REAL        vpi_get_gran __(( VP_VIEWPORT DUMMY0 )) ;
extern  void        vpi_get_wh __(( VP_VIEWPORT DUMMY0 , REAL* DUMMY1 ,
            REAL* DUMMY2 )) ;
extern  VP_VIEWPORT vpi_set_wh __(( VP_VIEWPORT DUMMY0 , REAL DUMMY1 ,
            REAL DUMMY2 )) ;
extern  void        vpi_get_screen_box __(( VP_VIEWPORT DUMMY0 , PT2 DUMMY1 ,
            PT2 DUMMY2 )) ;
extern  VP_VIEWPORT vpi_set_screen_box __(( VP_VIEWPORT DUMMY0 , PT2 DUMMY1 ,
            PT2 DUMMY2 )) ;
BBS_PUBLIC GR_COLOR vpi_get_bk_color __(( VP_VIEWPORT DUMMY0 )) ;
BBS_PUBLIC GR_COLOR vpi_get_bd_color __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_set_bk_color __(( VP_VIEWPORT DUMMY0 , 
            GR_COLOR DUMMY1 )) ;
extern  VP_VIEWPORT vpi_set_bd_color __(( VP_VIEWPORT DUMMY0 , 
            GR_COLOR DUMMY1 )) ;
extern  VP_VIEWPORT vpi_copy __(( VP_VIEWPORT DUMMY0 )) ;
extern  BOOLEAN     vpi_pt_inside __(( VP_VIEWPORT DUMMY0 , PT2 DUMMY1 )) ;
extern  BOOLEAN     vpi_overlap __(( VP_VIEWPORT DUMMY0 , 
            VP_VIEWPORT DUMMY1 )) ;
extern  VP_VIEW     vpi_save_view __(( VP_VIEWPORT DUMMY0 )) ;
extern  VP_VIEWPORT vpi_set_view __(( VP_VIEWPORT DUMMY0 , VP_VIEW DUMMY1 )) ;
extern  REAL*       vpi_get_transform __(( VP_VIEWPORT DUMMY0 , 
            VP_TRANSFORM DUMMY1 )) ;
extern  VP_VIEWPORT vpi_set_transform __(( VP_VIEWPORT DUMMY0 , 
            VP_TRANSFORM DUMMY1 )) ;
extern  REAL        vpi_get_select_width __(( VP_VIEWPORT DUMMY0 )) ;
#endif /* VPIDEFS */



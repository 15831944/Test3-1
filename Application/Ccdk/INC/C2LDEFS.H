//================== SysCAD - Copyright Kenwalt (Pty) Ltd ===================
// $Nokeywords: $
//===========================================================================
/******************************** C2LDEFS.H ********************************/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!! (C) Copyright 1989, 1990, 1991 Building Block Software  !!!!!!!!*/
/*!!!!!!!!                    All rights reserved                  !!!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/

#ifndef     C2LDEFS
#define     C2LDEFS
#include <c2defs.h>

extern  void    c2l_set_buf_size __(( INT DUMMY0 )) ;
extern  C2_LINE c2l_alloc __(( void )) ;
extern  C2_LINE c2l_create_copy __(( C2_LINE DUMMY0 )) ;
extern  void    c2l_free __(( C2_LINE DUMMY0 )) ;
extern  void    c2l_copy __(( C2_LINE DUMMY0 , C2_LINE DUMMY1 )) ;
extern  void    c2l_2pts __(( PT2 DUMMY0 , PT2 DUMMY1 , C2_LINE DUMMY2 )) ;
extern  C2_LINE c2l_create_2pts __(( PT2 DUMMY0 , PT2 DUMMY1 )) ;
extern  void    c2l_eval __(( C2_LINE DUMMY0 , REAL DUMMY1 , INT DUMMY2 ,
            PT2* DUMMY3 )) ;
extern  void    c2l_pt_tan __(( C2_LINE DUMMY0 , REAL DUMMY1 , PT2 DUMMY2 ,
            PT2 DUMMY3 )) ;
extern  INT     c2l_intersect __(( C2_LINE DUMMY0 , REAL DUMMY1 , 
            REAL DUMMY2 , C2_LINE DUMMY3 , REAL DUMMY4 , REAL DUMMY5 , 
            REAL* DUMMY6 , REAL* DUMMY7 , PT2* DUMMY8 , INT* DUMMY9 )) ;
extern  INT     c2l_inters_ext __(( C2_LINE DUMMY0 , C2_LINE DUMMY1 ,
            REAL* DUMMY2 , REAL* DUMMY3 , PT2* DUMMY4 , INT* DUMMY5 , 
            BOOLEAN* DUMMY6 )) ;
extern  INT     c2l_intersect_coinc __(( C2_LINE DUMMY0 , REAL DUMMY1 , 
            REAL DUMMY2 ,  C2_LINE DUMMY3 , REAL DUMMY4 , REAL DUMMY5 , 
            REAL* DUMMY6 , REAL* DUMMY7 ,  PT2* DUMMY8 , INT* DUMMY9 )) ;
extern  void    c2l_translate __(( C2_LINE DUMMY0 , PT2 DUMMY1 , 
            C2_LINE DUMMY2 )) ;
extern  void    c2l_scale __(( C2_LINE DUMMY0 , PT2 DUMMY1 , REAL DUMMY2 ,
            C2_LINE DUMMY3 )) ;
extern  void c2l_mirror __(( C2_LINE DUMMY0 , PT2 DUMMY1 , PT2 DUMMY2 ,
            C2_LINE DUMMY3 )) ;
extern  void    c2l_rotate_cs __(( C2_LINE DUMMY0 , PT2 DUMMY1 , REAL DUMMY2 ,
            REAL DUMMY3 , C2_LINE DUMMY4 )) ;
extern  void    c2l_transform __(( C2_LINE DUMMY0 , C2_TRANSFORM DUMMY1 ,
            C2_LINE DUMMY2 )) ;
extern  REAL    c2l_project __(( C2_LINE DUMMY0 , PT2 DUMMY1 , PT2 DUMMY2 )) ;
extern  void    c2l_offset __(( C2_LINE DUMMY0 , REAL DUMMY1 , 
            C2_LINE DUMMY2 )) ;
extern  void    c2l_info __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 ,
            FILE* DUMMY3 )) ;
extern  void    c2l_box __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 ,
            C2_BOX DUMMY3 )) ;
extern  BOOLEAN c2l_select __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 ,
            PT2 DUMMY3 , REAL DUMMY4 , REAL* DUMMY5 , REAL* DUMMY6 )) ;
extern  REAL    c2l_length __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 )) ;
extern  BOOLEAN c2l_pt_at_dist __(( C2_LINE DUMMY0 , REAL DUMMY1 ,
            REAL DUMMY2 , REAL DUMMY3 , REAL DUMMY4 ,  REAL* DUMMY5 ,
            REAL* DUMMY6 )) ;
extern  void    c2l_break __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 ,
            INT DUMMY3 , PARM DUMMY4 , PT2* DUMMY5 )) ;
extern  BOOLEAN c2l_approx __(( C2_LINE DUMMY0 , REAL DUMMY1 , REAL DUMMY2 ,
            PT2* DUMMY3 , PARM DUMMY4 ,  INT DUMMY5 , INT* DUMMY6 ,
            REAL* DUMMY7 )) ;
extern  BOOLEAN c2l_approx_zoomed __(( C2_LINE DUMMY0 , REAL DUMMY1 ,
            REAL DUMMY2 ,  REAL DUMMY3 , REAL DUMMY4 , REAL DUMMY5 ,
            PT2* DUMMY6 , PARM DUMMY7 , INT DUMMY8 , INT* DUMMY9 ,
            REAL* DUMMY10 )) ;
extern  C2_LINE c2l_get __(( FILE* DUMMY0 , PARM DUMMY1 , PARM DUMMY2 )) ;
extern  BOOLEAN c2l_put __(( FILE* DUMMY0 , C2_LINE DUMMY1 , PARM DUMMY2 , 
            PARM DUMMY3 )) ;
extern  INT c2l_coinc_order __(( REAL* DUMMY1 , REAL* DUMMY2 , PT2* DUMMY3 , 
            INT* DUMMY4 , INT DUMMY5 )) ;
extern  void c2l_divide __(( C2_LINE DUMMY0 , INT DUMMY1 , REAL DUMMY2 , 
            REAL DUMMY3 , PT2* DUMMY4 , PARM DUMMY5 )) ;
extern  C2_LINE c2l_reverse __(( C2_LINE DUMMY0 , C2_LINE DUMMY1 )) ; 
extern  BOOLEAN  c2l_get_pts_d __(( C2_LINE DUMMY0 , REAL DUMMY1 , 
            REAL DUMMY2 , PT2 DUMMY3 , PT2 DUMMY4 , REAL* DUMMY5 )) ;

#endif /* C2LDEFS*/



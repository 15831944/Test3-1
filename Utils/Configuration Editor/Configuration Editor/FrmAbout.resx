<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>
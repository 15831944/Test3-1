<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>